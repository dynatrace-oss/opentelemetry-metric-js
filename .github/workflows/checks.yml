name: Checks

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

env:
  SUPPORTED_VERSIONS: '[14,16,18]'

jobs:
  supported-versions:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - id: set-matrix
      run: |
        echo "::set-output name=matrix::${{env.SUPPORTED_VERSIONS}}"
  unit-test:
    needs: supported-versions
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: ${{fromJson(needs.supported-versions.outputs.matrix)}}

    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - uses: actions/checkout@v2

      - name: Install
        run: npm install

      - name: Test
        run: npm run test
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Lint markdown files
        uses: avto-dev/markdown-lint@v1
        with:
          args: "./**/*.md"

      - name: Install
        run: npm install

      - name: Lint
        run: npm run lint
  backwards-compatibility:
    needs: supported-versions
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: ${{fromJson(needs.supported-versions.outputs.matrix)}}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - name: Install
        run: npm install --ignore-scripts

      - name: Install types
        run: "npm install @types/node@${{ matrix.node }}"

      - name: Compile
        run: npx tsc --noEmit
  all-passed:
    needs: [unit-test,lint,backwards-compatibility]
    runs-on: ubuntu-latest
    steps:
      - name: All checks passed
        run: 'true'
